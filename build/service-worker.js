"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","a156604c2988bbc70b6b96d98941ce77"],["/static/css/main.229a63e4.css","80fdddb2ce2d4157797c2a3231deb00a"],["/static/js/main.c4cb9c59.js","648bbfd6ab91fb7dea8020d0962b8d9b"],["/static/media/add.41db7cc1.svg","41db7cc1367d0e39697893518118329a"],["/static/media/back.290174b6.svg","290174b6259ea557de7fde682836d3c6"],["/static/media/bronze.0d58e561.svg","0d58e56162808214e7e4dee0ce6ff935"],["/static/media/cancel.db9d489c.svg","db9d489c3d252e1e33f39ac3dcdae033"],["/static/media/dashboard.593930c2.svg","593930c2c9e81fdec67ffb9eeb9ed184"],["/static/media/error.b2138751.svg","b2138751ec3c40bb5c24fcea41aaff9d"],["/static/media/gold.b2b97c41.svg","b2b97c4161758c5ef92c4c26a528b839"],["/static/media/loyalty.f846f7b1.svg","f846f7b166f1ae33fb93647af9799247"],["/static/media/menu.2590a8da.svg","2590a8dab5a55ed15592fb0a78c4ea67"],["/static/media/next.ff2b9671.svg","ff2b96719fb93f9698bfe4070dea4e27"],["/static/media/nutrition.b8c2f2e7.svg","b8c2f2e70cded652ffdc8a90b7d5d9f8"],["/static/media/personal.3af94c55.svg","3af94c55dc177f201028b289aba0e0c4"],["/static/media/rest.69ddbaa1.svg","69ddbaa1a6ffae526757845b7ea64bc5"],["/static/media/silver.4756c863.svg","4756c8634334f9b703701d5ad086b917"],["/static/media/success-inactive.f469bc01.svg","f469bc01850c414ceafe2839e5ef67df"],["/static/media/success.d29f1779.svg","d29f1779664178a55ed87236fd97c302"],["/static/media/sweat.340bf8e8.svg","340bf8e89ac8dcea0750a9643023dfee"],["/static/media/trophy.e2918ebd.svg","e2918ebdf7292f0ef2314b7f9df64faf"],["/static/media/wellness_demo.1552e3fc.gif","1552e3fc250115c29f13bf33e3d27dd0"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});